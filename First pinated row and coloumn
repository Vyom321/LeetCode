You are given a 0-indexed integer array arr, and an m x n integer matrix mat. arr and mat both contain all the integers in the range [1, m * n].
Go through each index i in arr starting from index 0 and paint the cell in mat containing the integer arr[i].
Return the smallest index i at which either a row or a column will be completely painted in mat.

class Solution {
public:
    int firstCompleteIndex(vector<int>& arr, vector<vector<int>>& mat) {
        int rows = mat.size();
        int col = mat[0].size();
        unordered_map<int , pair<int,int>> pos;
        for(int i=0;i<rows;++i){
            for(int j=0;j<col;++j){
                pos[mat[i][j]]={i,j};
            }
        }
        vector<int>rowCount(rows ,0),colCount(col,0);
        for(int i=0;i<arr.size();++i){
            auto[r,c]=pos[arr[i]];
            rowCount[r]++;
            colCount[c]++;
            if(rowCount[r]==col||colCount[c]==rows){
                return i;
            }
        }
        return -1;
    }
};
